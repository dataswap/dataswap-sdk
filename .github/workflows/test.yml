name: Dataswap build & Test
on:
    workflow_dispatch:
    push:
        branches: ["dev"]
    pull_request:
        branches: ["main"]
jobs:
    build:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [18.x]
        steps:
            - uses: actions/checkout@v3
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Checkout repository
              uses: actions/checkout@v2
            - name: Cache dependencies
              uses: actions/cache@v2
              with:
                  path: |
                      ~/.npm
                  key: ${{ runner.os }}-node-${{ hashFiles('**/*.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-node-
                      ${{ runner.os }}-
            - name: Install dependencies
              run: |
                  npm install
            - name: Build
              run: |
                  npm run build
            - name: Build Test
              run: |
                  npm run build:test

    Test:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [18.x]
        steps:
            - uses: actions/checkout@v3
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}

            - name: deploy localnet
              run: |
                  docker run -d -p 1234:1234  --name localnet dataswap/lotus-devnet:0.1.2
                  sleep 90
                  docker exec localnet /usr/local/bin/lotus wallet list

            - name: Test
              env:
                  NETWORK_RPC_URL: ${{vars.NETWORK_RPC_URL}}
              run: |
                  docker exec localnet cat /root/contract >> ./contract
                  docker exec localnet cat /root/env >> ./env
                  source ./contract
                  source ./env
                  export
                  npm install
                  npm run build
                  npm run test
